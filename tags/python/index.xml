<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Dev. Blog</title>
    <link>https://isprometheo.github.io/tags/python/</link>
    <description>Recent content in python on Dev. Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 19 Jan 2017 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://isprometheo.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Emacs] Python 개발 환경 구축</title>
      <link>https://isprometheo.github.io/posts/9/</link>
      <pubDate>Thu, 19 Jan 2017 00:00:00 +0900</pubDate>
      
      <guid>https://isprometheo.github.io/posts/9/</guid>
      <description>예전에 Emacs로 python 통합 개발 환경을 구성하기 위해서 여러 라이브러리들을 설치해본 적이 있었다. 당시에는 ropemacs를 사용하여 다른 것보다도 자동 완성 기능을 할 수 있도록 했었다. 최근에 다시 Python으로 개발하면서</description>
    </item>
    
    <item>
      <title>[Python] GeoDjango</title>
      <link>https://isprometheo.github.io/posts/6/</link>
      <pubDate>Sat, 13 Jun 2015 00:00:00 +0900</pubDate>
      
      <guid>https://isprometheo.github.io/posts/6/</guid>
      <description>Django에서 일정 거리내의 데이터를 조회하려면 다음과 같은 API를 사용하면되는데 데이터베이스에 따라 사용할 수 있는 것이 제한되어 있다. SpatiaLite를 이용하는 경우에 distance_gt, distance_gte, distance_lt, distance_lte는 사용 가</description>
    </item>
    
    <item>
      <title>[Python] Django logging</title>
      <link>https://isprometheo.github.io/posts/5/</link>
      <pubDate>Sun, 10 May 2015 00:00:00 +0900</pubDate>
      
      <guid>https://isprometheo.github.io/posts/5/</guid>
      <description>Django에서 로그를 남기려면 다음과 같이 하면 된다. settings.py에 다음을 추가한다. LOGGING = { &#39;version&#39;: 1, &#39;disable_existing_loggers&#39;: False, &#39;handlers&#39;: { &#39;file&#39;: { &#39;level&#39;: &#39;DEBUG&#39;, &#39;class&#39;: &#39;logging.FileHandler&#39;, &#39;filename&#39;: &#39;/path/to/log/debug.log&#39;, }, }, &#39;loggers&#39;: { &#39;django.request&#39;: { &#39;handlers&#39;: [&#39;file&#39;], &#39;level&#39;: &#39;DEBUG&#39;, &#39;propagate&#39;: True, }, &#39;django.request&#39;: { &#39;handlers&#39;: [&#39;file&#39;], &#39;level&#39;: &#39;DEBUG&#39;, &#39;propagate&#39;: True, }, ‘myproject&#39;: { &#39;handlers&#39;: [&#39;file&#39;], &#39;level&#39;:</description>
    </item>
    
    <item>
      <title>[Python] nginx &#43; gunicorn &#43; Django</title>
      <link>https://isprometheo.github.io/posts/4/</link>
      <pubDate>Sun, 12 Apr 2015 00:00:00 +0900</pubDate>
      
      <guid>https://isprometheo.github.io/posts/4/</guid>
      <description>Django 프로젝트의 settings.py에 다음을 추가한다. STATIC_ROOT = os.path.join(BASE_DIR, &#39;static&#39;) 그리고 다음 명령어를 이용하여 Django에 내장된 static 파일을 지정한 디렉토리에 저장한다. $ python manage.py collectstatic gunicorn 관련된 설정은 공식 문서와 예제 파일을 참고하여 작성한다.</description>
    </item>
    
    <item>
      <title>[Python] nginx &#43; Django</title>
      <link>https://isprometheo.github.io/posts/1/</link>
      <pubDate>Mon, 04 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://isprometheo.github.io/posts/1/</guid>
      <description>Django와 nginx를 연동하기 위해서 flup 라이브러리를 설치한다. $ pip install flup Django 실행은 다음과 같다. $ python manage.py runfcgi method=prefork pidfile=PID_FILE host=127.0.0.1 port=8000 nginx.conf 에 다음과 같이 추가한다. server { listen 80 server_name localhost; location /static/ { #static url autoindex on; root /static/; #static 파일들이 저장된 디렉토리 } location / { #사용</description>
    </item>
    
  </channel>
</rss>